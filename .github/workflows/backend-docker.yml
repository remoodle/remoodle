name: "[backend] Publish Docker image"

on:
  workflow_call:
  push:
    branches: [trunk]
    paths:
      - "apps/backend/**"
      - ".github/workflows/backend-docker.yml"
  workflow_dispatch:

env:
  IMAGE_NAME: backend
  REGISTRY: ghcr.io

permissions: write-all

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

      - name: Get the latest tag
        id: latest_tag
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
            const { data: tags } = await github.repos.listTags({
              ...context.repo,
              per_page: 100,
            });

            const prefix = "remoodle/backend-";
            const foundTags = tags
              .filter(({name}) => name.startsWith(prefix))

            const latestTag = foundTags[0] && foundTags[0].name;

            return latestTag ? latestTag.slice(prefix.length) : "";

      - name: Build image
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's/[\/-]/_/g')

          # Create server version tag
          LATEST_TAG=${{ steps.latest_tag.outputs.result }}
          SHA=${{ github.workflow_sha }}
          VERSION_TAG=${LATEST_TAG}.${SHA::8}.${VERSION}

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo VERSION_TAG=$VERSION_TAG

          # Build the Docker image
          docker build -f apps/backend/Dockerfile . --tag $IMAGE_ID:$VERSION_TAG --build-arg VERSION_TAG=$VERSION_TAG

          # Docker Push
          docker push $IMAGE_ID:$VERSION_TAG
