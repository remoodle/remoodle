name: "Release, web"

on:
  push:
    branches: [trunk]
    paths:
      - "remoodle/frontend/web/**"
      - ".github/workflows/web-release.yml"

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
      prs_created: ${{ steps.release.outputs.prs_created }}
      prs: ${{ steps.release.outputs.prs }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - uses: actions/checkout@v4
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: .release-please/config.json
          manifest-file: .release-please/manifest.json

  find_release_pr:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        id: find_pr
        with:
          script: |
            let prsJson = `${{ needs.release.outputs.prs }}`;

            if (!prsJson || prsJson.trim() === '') {
              console.log('No PRs data available or the data is empty.');
              return null;
            }

            prsJson = prsJson.replace(/("body":\s*")[^"]*(")/g, '$1$2');

            try {
              const prs = JSON.parse(prsJson);

              const targetPr = prs.find(pr => pr.title.includes('remoodle/web'));

              if (targetPr) {
                console.log('PR found for deployment:', targetPr);
                return JSON.stringify(targetPr);
              }
            } catch (error) {
              console.error('Error parsing PRs:', error);
            }

            return null;
          result-encoding: string

  deploy-pr-preview:
    needs: find_release_pr
    if: needs.find_release_pr.outputs.result
    uses: remoodle/heresy/.github/workflows/web-preview.yml@trunk
    secrets: inherit
    with:
      title: ${{ fromJson(needs.find_release_pr.outputs.result).title }}
      number: ${{ fromJson(needs.find_release_pr.outputs.result).number }}
      branch: ${{ fromJson(needs.find_release_pr.outputs.result).headBranchName }}

  deploy-stage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "remoodle/frontend/web/pnpm-lock.yaml"

      - name: Install dependencies
        run: cd remoodle/frontend/web && pnpm install

      - name: Build app
        env:
          COMMIT_SHA: ${{ github.sha }}
        run: cd remoodle/frontend/web && pnpm build-only

      - run: echo "ignore-workspace-root-check=true" >> .npmrc

      - name: Deploy on stage
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ vars.CF_ACCOUNT_ID }}
          command: pages deploy remoodle/frontend/web/dist --project-name="frontend-dev-svo" --branch="trunk"

  deploy-prod:
    needs: [release]
    if: fromJson(needs.release.outputs.paths_released) && contains(needs.release.outputs.paths_released, 'remoodle/frontend/web')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 8.15.5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "remoodle/frontend/web/pnpm-lock.yaml"

      - name: Install dependencies
        run: cd remoodle/frontend/web && pnpm install

      - name: Build app
        env:
          COMMIT_SHA: ${{ github.sha }}
        run: cd remoodle/frontend/web && pnpm build-only

      - run: echo "ignore-workspace-root-check=true" >> .npmrc

      - name: Deploy on production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ vars.CF_ACCOUNT_ID }}
          command: pages deploy remoodle/frontend/web/dist --project-name="frontend-prod-nqz" --branch="production"
